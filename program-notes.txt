// General

// Message transmission (.write()) is optimized to reach the receiver module on the shortest route. I.e. messages that need to reach KOMBI are sent on KCAN even if the BMW implementation
// would have sent it over PTCAN in order to minimize any gateway delay.
// Wherever pausing is required (dtc/dsc off for example), FiFo queues are implemented to ensure reading and processing of messages is unaffected.
// To diagnose/code/etc. the SVT module, hold POWER when turning on ignition. Transmitting to DCAN corrupts UIF reads for other modules.
// Sometimes DSC/DTC status isn't tracked correctly because 0x19E is not being transmitted properly. I don't have a solution for this other than disconnecting the battery, cycling the ignition and DTC/DSC modes a few times.



// Arduino IDE settings

// Board: Teensy 4.0
// Optimize: Fastest
// CPU Speed: 600 MHz
// USB Type: Dual Serial



// Centre console section

// Enable use of M3 centre console button block. POWER and DSC OFF buttons. Control POWER LED when MDrive is on.
// 1. Request MDrive when POWER button is pressed.
// 2. Illuminate POWER LED when MDrive is on.
// 3. Request full DSC OFF after holding DSC OFF button. Turn everything back on with a short press.



// K-CAN section

// 1. Monitor throttle, RPM and clutch status to control the shift lights and exhaust flap.
// -> Create missing 0x206 message to animate DCT KOMBI shift lights.
// -> Display Launch control flag
// 2. Monitor ignition and DSC program status.
// 3. Transmit DME and SVT70 mode requests.
// 4. Monitor and indicate front foglight status.
// 5. Turn on driver's and passenger's seat heating when ignition is turned on and ambient temperature is below configured treshold.
// 6. Send dummy DME POWER CKM (car key memory) message.
// 7. Track battery voltage (debug only) and Engine On status.
// 8. Receive, save and update MDrive settings from iDrive.
// 9. Fully replaces the 0x399 MDrive status allowing control of:
//    EDC
//    DSC
//    DME throttle map
//    Servotronic via SVT70 module
// 10. Create the two missing messages required to use an F series ZBE (KCAN1, not KCAN2) in an E6,7,8,9X car.
//    *Should* work with:
//    6582 9267955 - 4-pin MEDIA button. **Tested - controller build date 19.04.13
//    6131 9253944 - 4-pin CD button
//    6582 9206444 - 10-pin CD button
//    6582 9212449 - 10-pin CD button

// Credit to Trevor for providing insight into 0x273, 0x277, 0x2CA and 0x0AA http://www.loopybunny.co.uk/CarPC/k_can.html



// PT-CAN section

// 1. Monitor steering wheel buttons and request MDrive when Source/M is pressed.
// 2. Monitor and indicate FTM status in KOMBI by flashing tyre icon when initializing.
// 3. Monitor and align shiftlights with the variable redline request from the DME.
// 4. Forwards any diagnostic messages sent by the SVT70 module on the PT-CAN to the D-CAN to enable communication with BMW tools. In the E70 this is implemented in the JBE gateway tables.
// 5. Forward CC (check control) notifications from the SVT70 to KCAN so that KOMBI can display them.



// DCAN section

// 1. Forwards any messages sent by the DCAN tool to the PT-CAN to enable communication with the SVT70



// MSD81 IKM0S binary modification

// [PROGRAM]

// 0x83738/9  -> F1 07     CAN message table
// 0x1f3ad4/5 -> F1 07     CAN filters
// Replace 15 03 (0x315 represented in LE) to stop MSD81 from reacting to Vehicle Mode changes (triggered by JBBF through EDC button)
// This also allows state_spt (throttle map) to be controlled independently from the main "MDrive" with the console switch
// Re-calculate checksum at 0x80304 

// [MAP]

// lc_var_spt_swi at 0x4CD1D set to 00. This disables the DME MDrive logic. 0x399, 0x1D9 etc.
